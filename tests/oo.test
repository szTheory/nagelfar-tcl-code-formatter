#------------------------------------------------------------*- tcl -*-
# Tests for objects
#----------------------------------------------------------------------
# $Revision: 384 $
#----------------------------------------------------------------------

# Helper to test tcloo creation using different ways
proc testTclOOCreate {style args} {
    set lines {}
    # Assume indent 8
    set i "        "
    foreach {obj body} $args {
        switch $style {
            1 { # Class create
                lappend lines ""
                lappend lines "$i[list oo::class create $obj $body]"
            }
            2 { # Define, one block
                lappend lines "$i[list oo::class create $obj]"
                lappend lines "$i[list oo::define $obj $body]"
            }
            default { # Define multiple
                lappend lines "$i[list oo::class create $obj]"
                set buildLine ""
                foreach line [split $body \n] {
                    if {$buildLine eq ""} {
                        set buildLine $line
                    } else {
                        append buildLine \n $line
                    }
                    if {[info complete $buildLine]} {
                        lappend lines "$i    [list oo::define $obj $buildLine]"
                        set buildLine ""
                    }
                }
            }
        }
    }
    createTestFile [join $lines \n]
}

test oo-1.1 {
    Object definition experiment
} -body {
    createTestFile {
        ##nagelfar syntax snit::type x cn
        ##nagelfar syntax snit::type::method x cv
        ##nagelfar syntax snit::type::constructor cv
        ##nagelfar syntax snit::type::destructor cl
        ##nagelfar syntax snit::type::option x p*
        ##nagelfar syntax apa x*
        snit::type apa {
            option -x -default 10
            constructor {c d} {
                puts $c
            }
            destructor {
                list hej
            }
            method gugg {a b} {
                puts $a
            }
        }
        set x [apa %AUTO% -x 5]
        $x gugg 5 7
        $x destroy
    }
    execTestFile
} -result {%%} -match glob

foreach style {1 2 3} {
    test oo-2.1.$style {
        tcloo inheritance, checking "next"
    } -constraints runin86 -body {
        testTclOOCreate $style Base {
            variable id
            constructor {n} {
                set id $n
            }
            method id {} {
                return $id
            }
        } Package {
            superclass Base
            variable records
            constructor {n {r {}}} {
                next $n x
                set records $r
            }
            method id {} {
                next x
                list $records
            }
        }
        execTestFile
    } -result {%%Line  16: E Wrong number of arguments (2) to "Base new"
Line  20: E Wrong number of arguments (1) to "_obj,Base id"}
}

foreach style {1 2 3} {
    test oo-3.1.$style {
        tcloo, my
    } -constraints runin86 -body {
        # A fully qualified name
        testTclOOCreate $style ::Base::Bas {
            variable apa
            constructor {n} {
                my variable id
                set id $n
            }
            method id {} {
                my variable id
                return $id
            }
            method xx {} {
                set [my varname apa] x
                return [my id x]
            }
            method Hej {a b xName yName} {
                upvar 1 $xName x $yName y
                set x 1
                set y 1
            }
            method hopp {apa bepa} {
                my Hej $apa $bepa apa bepa
            }
        }
        execTestFile
    } -result {%%Line  14: E Wrong number of arguments (2) to "_obj,Bas id"}
}

foreach style {1 2 3} {
    test oo-3.2.$style {
        tcloo, my
    } -constraints runin86 -body {
        # A not fully qualified name
        testTclOOCreate $style Base::Bas {
            variable apa
            constructor {n} {
                my variable id
                set id $n
            }
            method id {} {
                my variable id
                return $id
            }
            method xx {} {
                set [my varname apa] x
                return [my id x]
            }
            method Hej {a b xName yName} {
                upvar 1 $xName x $yName y
                set x 1
                set y 1
            }
            method hopp {apa bepa} {
                my Hej $apa $bepa apa bepa
            }
        }
        execTestFile
    } -result {%%Line  14: E Wrong number of arguments (2) to "_obj,Bas id"}
}

foreach style {1 2 3} {
    test oo-4.1.$style {
        tcloo, variable
    } -constraints runin86 -body {
        testTclOOCreate $style Base {
            variable apa bepa cepa
            constructor {n} {
                set apa $n
                set bepa $cepa
            }
            method id {} {
                return $apa
            }
            method xx {} {
                # A normal variable command should work here
                variable y
                list $cepa $depa $y
            }
        }
        execTestFile
    } -result {%%Line  14: E Unknown variable "depa"}
}

foreach style {1 2 3} {
    test oo-5.1.$style {
        tcloo, misc
    } -constraints runin86 -body {
        testTclOOCreate $style Base {
            variable apa bepa cepa
            constructor {n} {
                set apa $n
                set bepa $cepa
            }
            method id {} {
                return $apa
            }
            # Recognise some keywords
            expurt Upper
            class x
            deletemethod x x
            export Upper x
            filter x
            forward x x x
            mixin x
            renamemethod x x
            self s x
            superclass gugge
            unexport x x
            destructor { 
                list $apa $bepa $cepa
            }
            method Upper {} {
            }
        }
        execTestFile
    } -result {%%Line  12: W Unknown command "expurt"}
}

test oo-6.1 {
    Test with included snit package definition
} -body {
    createTestFile {
        ##nagelfar syntax apa dc=_obj,apa p*
        ##nagelfar return apa _obj,apa
        ##nagelfar option apa -x
        ##nagelfar option _obj,apa\ configure -x

        ##nagelfar implicitvarns snit::type::apa self\ _obj,apa pdf

        snit::type apa {
            option -x -default 10
            variable pdf
            constructor {c d} {
                puts $c
            }
            destructor {
                list hej $pdf
            }
            method gugg {a b} {
                puts $a
                trace add variable pdf write [mymethod nisse]
            }
        }
        set x [apa %AUTO% -x 5]
        $x gugg 5 7
        $x destroy
    }
    execTestFile -flags "-s _ -s snitdb.tcl"
} -result {%%} -match glob
